// !!!!! This file is generated by gulp-iconfont-css
// !!!!! Only edit sass/templates/_icon.tmpl not sass/base/_icon.scss

///////////////////////////////////////////////////////////////////////////////
// icon
///////////////////////////////////////////////////////////////////////////////

$default_web_font_alpha: 'icon-custom' !default;
$default_web_font_margin: true !default;

@include web_font('icon-custom', 'icon-custom', 'icon-custom');

%icon {
  display: inline-block;

  width: 1em;

  @if $default_web_font_margin == true {
    margin-right: 0.25em;
  }

  font-family: "icon-custom";
  font-style: normal;
  font-weight: normal;
  line-height: 1;
  vertical-align: middle;
  text-align: center;
  text-decoration: inherit;
  text-transform: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  speak: none;
}

[class^="icon-"]:before, [class*=" icon-"]:before {
  @extend %icon;
}

$icons: (
<% _.each(glyphs, function(glyph) { %>
  icon-<%= glyph.fileName %>: '\<%= glyph.codePoint %>',
<% }); %>
);

  @mixin icon-content($icon-content) {
    $content: map-get($icons, $icon-content);
    content: $content;
  }

  @mixin icon-before($icon-name, $default_web_font_margin: $margin) {
    @extend %icon;
    &:before {
      content: map-get($icons, $icon-name);
    }
  }

  @mixin icon-after($icon-name, $default_web_font_margin: $margin) {
    @extend %icon;
    &:after {
      content: map-get($icons, $icon-name);
    }
  }

  @each $icon_name, $icon_value in $icons {
    .#{$icon_name}:before {
      content: $icon_value;
    }
  }

  //
  // EOF
  //
<%
// preserve newline
%>
